From 37dd26fc628fba4e06b9ab210898a955ddcca831 Mon Sep 17 00:00:00 2001
From: zqm64 <zqm64@outlook.com>
Date: Wed, 13 May 2020 19:27:18 +0800
Subject: [PATCH 06/25] mdss: samsung: Import S6D7AA0X62_BV050HDM_J7LTECHN from
 original j7ltechn kernel

Change-Id: Icc347f986dc51e0d7876a9d986d33d8889789e73
---
 .../msm8929/msm8929-sec-j7-chn-r00.dtsi       |    2 +-
 .../msm8929/msm8929-sec-j7-chn-r01.dtsi       |    2 +-
 .../msm8929/msm8929-sec-j7-chn-r02.dtsi       |    2 +-
 .../msm8929/msm8929-sec-j7-chn-r04.dtsi       |    2 +-
 drivers/video/msm/mdss/samsung/Kconfig        |    8 +
 drivers/video/msm/mdss/samsung/Makefile       |    9 +-
 .../S6D7AA0X62_BV050HDM_J7LTECHN/Makefile     |    7 +
 ...anel_S6D7AA0X62_BV050HDM_hd_5_0_video.dtsi |  311 +++
 ...anel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi |  275 ++
 .../S6D7AA0X62_BV050HDM_J7LTECHN/lm3632bl.c   |  422 ++++
 .../ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h    | 2226 +++++++++++++++++
 .../ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h    | 2226 +++++++++++++++++
 .../ss_dsi_panel_S6D7AA0X62_BV050HDM.c        |  319 +++
 .../ss_dsi_panel_S6D7AA0X62_BV050HDM.h        |   41 +
 14 files changed, 5847 insertions(+), 5 deletions(-)
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/Makefile
 create mode 100644 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_0_video.dtsi
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/lm3632bl.c
 create mode 100644 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.c
 create mode 100755 drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.h

diff --git a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r00.dtsi b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r00.dtsi
index e75a03dee0e..793c474d4f6 100755
--- a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r00.dtsi
+++ b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r00.dtsi
@@ -16,7 +16,7 @@
 #include "msm8939-mdss.dtsi"
 #include "msm8929-sec-j7-battery-r00.dtsi"
 #include "msm8939-audio-internal_codec.dtsi"
-#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
+#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
 #include "msm8929-j7-chn-overlay.dtsi"
 #include "msm8929-camera-sensor-cdp-j7-chn-r00.dtsi"
 
diff --git a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r01.dtsi b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r01.dtsi
index ec0b7b247b4..94952c799c9 100755
--- a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r01.dtsi
+++ b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r01.dtsi
@@ -16,7 +16,7 @@
 #include "msm8939-mdss.dtsi"
 #include "msm8929-sec-j7-battery-r00.dtsi"
 #include "msm8939-audio-internal_codec.dtsi"
-#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
+#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
 #include "msm8929-j7-chn-overlay.dtsi"
 #include "msm8929-camera-sensor-cdp-j7-chn-r00.dtsi"
 
diff --git a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r02.dtsi b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r02.dtsi
index eebd76a9fcf..d6aa015ea10 100755
--- a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r02.dtsi
+++ b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r02.dtsi
@@ -16,7 +16,7 @@
 #include "msm8939-mdss.dtsi"
 #include "msm8929-sec-j7-battery-r00.dtsi"
 #include "msm8939-audio-internal_codec.dtsi"
-#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
+#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
 #include "msm8929-j7-chn-overlay.dtsi"
 #include "msm8929-camera-sensor-cdp-j7-chn-r00.dtsi"
 
diff --git a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r04.dtsi b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r04.dtsi
index 5ffa1aa2146..e42ea562514 100755
--- a/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r04.dtsi
+++ b/arch/arm/boot/dts/samsung/msm8929/msm8929-sec-j7-chn-r04.dtsi
@@ -16,7 +16,7 @@
 #include "msm8939-mdss.dtsi"
 #include "msm8929-sec-j7-battery-r00.dtsi"
 #include "msm8939-audio-internal_codec.dtsi"
-#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
+#include "../../../../../../drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi"
 #include "msm8929-j7-chn-overlay.dtsi"
 #include "msm8929-camera-sensor-cdp-j7-chn-r00.dtsi"
 
diff --git a/drivers/video/msm/mdss/samsung/Kconfig b/drivers/video/msm/mdss/samsung/Kconfig
index 8a2fd5f5257..4ad00fb3b11 100755
--- a/drivers/video/msm/mdss/samsung/Kconfig
+++ b/drivers/video/msm/mdss/samsung/Kconfig
@@ -357,6 +357,14 @@ config PANEL_S6D7AA0X62_BV050HDM_HD_5_5
 	---help---
 	SDC S6D7AA0X62 LDI 720_1280
 
+config PANEL_S6D7AA0X62_BV050HDM_HD_5_5_J7LTECHN
+	depends on FB_MSM_MDSS_SAMSUNG
+	bool "SDC S6D7AA0X62 LDI"
+	default n
+	select MFD_LM3632
+	---help---
+	SDC S6D7AA0X62 LDI 720_1280 J7LTECHN
+
 config PANEL_NT51017_B4P096WX5VP09_WXGA
 	depends on FB_MSM_MDSS_SAMSUNG
 	bool "NOVATEK NT51017 LDI"
diff --git a/drivers/video/msm/mdss/samsung/Makefile b/drivers/video/msm/mdss/samsung/Makefile
index c74a0f63cc8..ab548b0dde8 100644
--- a/drivers/video/msm/mdss/samsung/Makefile
+++ b/drivers/video/msm/mdss/samsung/Makefile
@@ -105,9 +105,12 @@ obj-$(CONFIG_PANEL_S6E3FA3_AMS549JR01_FHD) += S6E3FA3_AMS549JR01/
 obj-$(CONFIG_PANEL_NT51017_B4P096WX5VP09_WXGA) += NT51017_B4P096WX5VP09/
 obj-$(CONFIG_PANEL_S6D7AA0X11_TV080WXM_WXGA) += S6D7AA0X11_TV080WXM_SKY82896/
 
-# J7_CHN panel-S6D7AA0X62_BV050HDM
+# J7_CHN panel-S6D7AA0X62_BV050HDM (used on J5 now)
 obj-$(CONFIG_PANEL_S6D7AA0X62_BV050HDM_HD_5_5) += S6D7AA0X62_BV050HDM/
 
+# J7_CHN panel-S6D7AA0X62_BV050HDM
+obj-$(CONFIG_PANEL_S6D7AA0X62_BV050HDM_HD_5_5_J7LTECHN) += S6D7AA0X62_BV050HDM_J7LTECHN/
+
 # O7_CHN panel-ILI9881C_SKI499017
 obj-$(CONFIG_PANEL_ILI9881C_SKI499017_HD) += ILI9881C_SKI499017/
 
@@ -272,6 +275,10 @@ ifeq ($(shell [ -d $(DISPLAY_DIR)/S6D7AA0X62_BV050HDM ] && echo y), y)
 obj-y += S6D7AA0X62_BV050HDM/
 endif
 
+ifeq ($(shell [ -d $(DISPLAY_DIR)/S6D7AA0X62_BV050HDM_J7LTECHN ] && echo y), y)
+obj-y += S6D7AA0X62_BV050HDM_J7LTECHN/
+endif
+
 ifeq ($(shell [ -d $(DISPLAY_DIR)/NT51017_B4P096WX5VP09 ] && echo y), y)
 obj-y += NT51017_B4P096WX5VP09/
 endif
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/Makefile b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/Makefile
new file mode 100755
index 00000000000..ec92625dc64
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/Makefile
@@ -0,0 +1,7 @@
+
+#
+# panel object
+# namd : ss_dsi_panel_"DDI NAME"_"PANEL NAME".o
+#
+obj-y  += ss_dsi_panel_S6D7AA0X62_BV050HDM.o
+obj-$(CONFIG_MFD_LM3632)	+= lm3632bl.o
\ No newline at end of file
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_0_video.dtsi b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_0_video.dtsi
new file mode 100644
index 00000000000..ee4650842f9
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_0_video.dtsi
@@ -0,0 +1,311 @@
+/* Copyright (c) 2013-14, Samsung Electronics Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/*---------------------------------------------------------------------------
+ * This file is autogenerated file using gcdb parser. Please do not edit it.
+ * Update input XML file to add a new entry or update variable in this file
+ * VERSION = "1.0"
+ *---------------------------------------------------------------------------*/
+&mdss_mdp {
+	ss_dsi_panel_S6D7AA0X62_BV050HDM_HD: ss_dsi_panel_S6D7AA0X62_BV050HDM_HD {
+		qcom,mdss-dsi-panel-name = "ss_dsi_panel_S6D7AA0X62_BV050HDM_HD";
+		label = "ss_dsi_panel_S6D7AA0X62_BV050HDM_HD";
+		qcom,mdss-dsi-panel-controller = <&mdss_dsi0>;
+		qcom,mdss-dsi-panel-type = "dsi_video_mode";
+		qcom,mdss-dsi-panel-destination = "display_1";
+		qcom,cont-splash-enabled;
+		qcom,mdss-dsi-panel-framerate = <60>;
+		qcom,mdss-dsi-virtual-channel-id = <0>;
+		qcom,mdss-dsi-stream = <0>;
+		qcom,mdss-dsi-panel-width = <720>;
+		qcom,mdss-dsi-panel-height = <1280>;
+		qcom,mdss-pan-physical-width-dimension = <62>; /* <Width> real size of panel in mm */
+		qcom,mdss-pan-physical-height-dimension = <106>; /*<Height> real size of panel in mm */
+		qcom,mdss-dsi-lp11-init;
+		qcom,mdss-dsi-init-delay-us = <100>;
+		qcom,mdss-dsi-h-front-porch = <104>;//
+		qcom,mdss-dsi-h-back-porch = <154>;//
+		qcom,mdss-dsi-h-pulse-width = <42>;//
+		qcom,mdss-dsi-h-sync-skew = <0>;
+		qcom,mdss-dsi-v-back-porch = <12>;//
+		qcom,mdss-dsi-v-front-porch = <16>;//
+		qcom,mdss-dsi-v-pulse-width = <4>;//
+		qcom,mdss-dsi-h-left-border = <0>;
+		qcom,mdss-dsi-h-right-border = <0>;
+		qcom,mdss-dsi-v-top-border = <0>;
+		qcom,mdss-dsi-v-bottom-border = <0>;
+		qcom,mdss-dsi-bpp = <24>;
+		qcom,mdss-dsi-color-order = <0>;
+		qcom,mdss-dsi-underflow-color = <0xff>;
+		qcom,mdss-dsi-border-color = <0>;
+		qcom,mdss-dsi-dma-trigger = "trigger_sw";
+		qcom,mdss-dsi-mdp-trigger = "none";
+		qcom,mdss-dsi-bl-min-level = <1>;
+		qcom,mdss-dsi-bl-max-level = <255>;
+		qcom,mdss-dsi-bl-pmic-control-type = "bl_ctrl_dcs";
+		qcom,mdss-dsi-lane-0-state;
+		qcom,mdss-dsi-lane-1-state;
+		qcom,mdss-dsi-lane-2-state;
+		qcom,mdss-dsi-lane-3-state;
+		qcom,mdss-dsi-bllp-eof-power-mode;
+		qcom,mdss-dsi-bllp-power-mode;
+		qcom,mdss-dsi-traffic-mode = "burst_mode";
+		qcom,mdss-dsi-force-clk-lane-hs;
+		qcom,mdss-dsi-reset-sequence = <1 20>, <0 1>, <1 20>;
+		qcom,mdss-dsi-h-sync-pulse = <0>;
+/*		qcom,mdss-dsi-hfp-power-mode;*/
+		qcom,mdss-dsi-hbp-power-mode;
+/*		qcom,mdss-dsi-hsa-power-mode;*/
+		qcom,mdss-dsi-panel-timings = [8B 1E 14 00 44 46 18 20 16 03 04 00];
+		qcom,mdss-dsi-t-clk-pre = <0x1C>;
+		qcom,mdss-dsi-t-clk-post = <0x04>;
+		qcom,mdss-dsi-on-command = [
+					/* Initializing  Sequence(1) */
+					39 01 00 00 01 00 03 F0 5A 5A
+					39 01 00 00 00 00 03 F1 5A 5A
+					39 01 00 00 00 00 03 FC A5 A5
+					/* OTP CTRL */
+					39 01 00 00 00 00 03 D0 00 10
+
+					/* Initializing  Sequence(2) */
+					39 01 00 00 00 00 02 B1 12
+					39 01 00 00 01 00 05 B2 14 22 2F 18
+					39 01 00 00 01 00 02 B3 11
+					39 01 00 00 01 00 0A BA 03 19 19 11 03 05 18 18 77
+					39 01 00 00 01 00 04 BC 00 4E 0B
+					39 01 00 00 01 00 04 C0 80 80 30
+					39 01 00 00 01 00 02 C1 01	/* CABC(MIE) off & manual dimming off */
+					39 01 00 00 01 00 02 C2 00
+					39 01 00 00 01 00 04 C3 40 00 28
+					39 01 00 00 01 00 06 E1 03 10 1C A0 10
+					39 01 00 00 01 00 09 EE A5 00 98 00 A5 00 98 00
+					39 01 00 00 01 00 06 F2 02 10 10 44 10
+					39 01 00 00 01 00 0B F3 01 93 20 22 80 05 25 3C 26 00
+					39 01 00 00 01 00 2E F4 02 02 10 26 10 02 03 03 03 10 16 03 00 0C 0C 03 04 05 13 1E 09 0A 05 05 01 04 02 61 74 75 72 83 80 80 00 00 01 01 28 04 03 28 01 D1 32
+					39 01 00 00 01 00 1B F5 92 23 2D 5F BB 8B 55 0F 33 33 03 59 54 52 45 57 60 10 60 80 27 26 52 25 6F 1B
+					39 01 00 00 00 00 21 F7 01 1B 08 0C 09 0D 01 01 01 04 06 01 01 00 00 1A 01 1B 0A 0E 0B 0F 01 01 01 05 07 01 01 00 00 1A
+					39 01 00 00 00 00 07 F6 60 25 05 00 00 00
+					39 01 00 00 00 00 06 FD 16 10 11 23 09
+					39 01 00 00 00 00 07 FE 00 02 03 21 80 78
+					39 01 00 00 00 00 12 EF 34 12 98 BA 10 80 24 80 80 80 00 00 00 44 A0 82 00
+					39 01 00 00 00 00 0E CD 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E
+					39 01 00 00 00 00 0E CE 00 00 00 00 00 00 00 00 00 00 00 00 00
+					39 01 00 00 00 00 02 51 00	/* change default brightness to 0 */
+					39 01 00 00 00 00 02 53 24	/* CABC(MIE) off & manual dimming off */
+					39 01 00 00 00 00 02 55 00	/* CABC(MIE) off & manual dimming off */
+
+					/* Gamma Setting Sequence(3)*/
+			39 01 00 00 00 00 12 FA 08 3F 0A 0C 00 02 06 03 04 0C 11 16 19 1A 1E 25 2F/* Positive Gamma *//*	2.4	*/
+			39 01 00 00 00 00 12 FB 08 3F 0A 0C 00 01 05 03 03 0B 11 16 18 1A 1E 25 2E/* Negative Gamma */
+/*	39 01 00 00 00 00 12 FA 08 3F 0D 11 06 0A 0E 0D 0E 15 19 18 19 1A 1B 1F 28*//* Positive Gamma *//*	2.2	*/
+/*	39 01 00 00 00 00 12 FB 08 3F 0C 11 05 0A 0E 0C 0D 15 18 18 19 19 1A 1E 27*//* Negative Gamma */
+/*	39 01 00 00 00 00 12 FA 08 3F 0E 13 09 0E 13 12 13 1B 1F 24 25 27 2A 2B 32*//* Positive Gamma *//*	2.6	*/
+/*	39 01 00 00 00 00 12 FB 08 3F 0D 13 09 0E 13 12 13 1A 1F 24 25 26 29 1A 31*//* Negative Gamma */
+/*	39 01 00 00 00 00 12 FA 08 3F 0E 15 0B 10 16 15 16 1E 23 29 2A 2C 2E 30 36*//* Positive Gamma *//*	2.8	*/
+/*	39 01 00 00 00 00 12 FB 08 3F 0E 14 0B 10 15 14 16 1D 23 29 2A 2B 2E 30 35*//* Negative Gamma */
+
+					/* Initializing Sequence(1-1) */
+					39 01 00 00 01 00 03 F0 A5 A5
+					39 01 00 00 00 00 03 F1 A5 A5
+					39 01 00 00 00 00 03 FC 5A 5A
+
+					/* Display on Sequence(4) */
+					05 01 00 00 78 00 02 11 00	/* Sleep Out & 120ms(0x78) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					];
+		qcom,mdss-dsi-on-command-state = "dsi_lp_mode";
+		qcom,mdss-dsi-off-command-state = "dsi_hs_mode";
+		qcom,mdss-dsi-off-command = [
+					05 01 00 00 32 00 02 28 00	/* wait 50ms(0x32) */
+					05 01 00 00 96 00 02 10 00	/* wait 150ms(0x96) */
+					];
+		samsung,mdss_check_panel_status_cmds_revA = [06 01 00 00 00 00 01 0A 01 00];	
+		samsung,mdss-check-panel-status-result = <0x9C>;		
+		samsung,mdss-sleep-out-command-enable;
+		samsung,mdss_sleep_out_cmds_revA = [
+					05 01 00 00 78 00 02 11 00	/* Sleep Out & 120ms(0x78) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+					05 01 00 00 05 00 02 29 00	/* Display On & 5ms(0x05) Delay */
+			];
+		samsung,mdss-dsi-bl-scale-low-level = <8>;
+		samsung,mdss-dsi-bl-scale-dim-level = <8>;
+		samsung,mdss-dsi-bl-scale-default-level = <89>;
+		samsung,mdss-dsi-bl-scale-max-level = <188>;
+		samsung,mdss-dsi-bl-pms-low-level = <7>;
+		samsung,mdss-dsi-bl-pms-dim-level = <7>;
+		samsung,mdss-dsi-bl-pms-default-level = <158>;
+		samsung,mdss-dsi-bl-pms-max-level = <255>;
+/*
+ * ************************************************************************************************************************************
+ *
+ *
+ *			Below  parameters are samsung dependent thigs
+ *
+ *
+ * ************************************************************************************************************************************
+ */
+		samsung,mdnie-tuning-enable-tft;
+		samsung,lcd-display-format-bgr;
+		samsung,level2_key_enable_tx_cmds_revA = [
+			39 01 00 00 00 00 03 F0 5A 5A
+		];
+		samsung,level2_key_disable_tx_cmds_revA = [
+			39 01 00 00 00 00 03 F0 A5 A5
+		];
+		samsung,packet_size_tx_cmds_revA = [
+			37 01 00 00 00 00 02 07 00
+		];
+		/*
+		 * First parameters can be changed
+		 * by function of samsung_nv_read()
+		 * because of that means offset of
+		 * read position
+		 */
+		samsung,reg_read_pos_tx_cmds_revA = [
+			15 01 00 00 00 00 02 B0 00
+		];
+		samsung,manufacture_id0_rx_cmds_revA = [06 01 00 00 00 00 01 da 03 00];
+		samsung,manufacture_id1_rx_cmds_revA = [06 01 00 00 00 00 01 db 03 00];
+		samsung,manufacture_id2_rx_cmds_revA = [06 01 00 00 00 00 01 dc 03 00];
+/*
+		* Command sets for CABC control
+*/
+		samsung,panel-vendor = "BOE";
+		samsung,tft_pwm_tx_cmds_revA=[
+			39 01 00 00 00 00 02 51 FF/*First command should be PWM duty change command*/
+		];
+		samsung,cabc_on_tx_cmds_revA = [
+			39 01 00 00 00 00 02 55 01
+		];
+		samsung,cabc_off_tx_cmds_revA = [
+			39 01 00 00 00 00 02 55 00
+		];
+		/*
+		* ************************************************************************************************************************
+		* Scaled level to index mappings
+		* ************************************************************************************************************************
+		*/
+	samsung,scaled_level_map_table_revA = <
+		/*<idx>	  <from>  <till> <scaled_level> */
+			0		0		0		0
+			1		1		7		2
+			2		8		11		4
+			3		12		14		6
+			4		15		17		8
+			5		18		19		10
+			6		20		22		12
+			7		23		24		14
+			8		25		27		16
+			9		28		29		18
+			10		30		32		19
+			11		33		34		20
+			12		35		37		21
+			13		38		39		22
+			14		40		42		24
+			15		43		44		25
+			16		45		47		26
+			17		48		49		27
+			18		50		52		28
+			19		53		54		29
+			20		55		57		30
+			21		58		59		31
+			22		60		62		32
+			23		63		64		33
+			24		65		67		34
+			25		68		70		35
+			26		71		72		36
+			27		73		75		37
+			28		76		77		38
+			29		78		80		39
+			30		81		82		40
+			31		83		85		41
+			32		86		87		42
+			33		88		90		43
+			34		91		92		44
+			35		93		95		45
+			36		96		97		46
+			37		98		100		48
+			38		101		102		50
+			39		103		105		52
+			40		106		107		54
+			41		108		110		56
+			42		111		112		58
+			43		113		115		60
+			44		116		117		62
+			45		118		120		64
+			46		121		122		66
+			47		123		125		68
+			48		126		127		70
+			49		128		130		72
+			50		131		133		74
+			51		134		135		76
+			52		136		138		78
+			53		139		140		80
+			54		141		143		82
+			55		144		145		84
+			56		146		148		86
+			57		149		150		88
+			58		151		153		90
+			59		154		155		92
+			60		156		158		94
+			61		159		160		96
+			62		161		163		98
+			63		164		165		100
+			64		166		168		103
+			65		169		170		106
+			66		171		173		109
+			67		174		175		112
+			68		176		178		115
+			69		179		180		118
+			70		181		183		121
+			71		184		185		124
+			72		186		188		127
+			72		189		190		130
+			74		191		193		133
+			75		194		196		137
+			76		197		198		141
+			77		199		201		145
+			78		202		203		149
+			79		204		206		153
+			80		207		208		157
+			81		209		211		161
+			82		212		213		165
+			83		214		216		169
+			84		217		218		173
+			85		219		221		177
+			86		222		223		181
+			87		224		226		185
+			88		227		228		189
+			89		229		231		193
+			90		232		233		197
+			91		234		236		201
+			92		237		238		205
+			93		239		241		209
+			94		242		243		213
+			95		244		246		217
+			96		247		248		221
+			97		249		251		225
+			98		252		253		229
+			99		254		255		233
+		>;
+		samsung,hbm_candela_map_table_revA = <
+			0	0	255	255	0
+			0	256	306	306	6
+		>;
+	};
+};
+
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi
new file mode 100755
index 00000000000..952b52da34c
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/dsi_panel_S6D7AA0X62_BV050HDM_hd_5_5_video.dtsi
@@ -0,0 +1,275 @@
+/* Copyright (c) 2013-14, Samsung Electronics Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/*---------------------------------------------------------------------------
+ * This file is autogenerated file using gcdb parser. Please do not edit it.
+ * Update input XML file to add a new entry or update variable in this file
+ * VERSION = "1.0"
+ *---------------------------------------------------------------------------*/
+&mdss_mdp {
+	ss_dsi_panel_S6D7AA0X62_BV050HDM_HD: ss_dsi_panel_S6D7AA0X62_BV050HDM_HD {
+		qcom,mdss-dsi-panel-name = "ss_dsi_panel_S6D7AA0X62_BV050HDM_HD";
+		label = "ss_dsi_panel_S6D7AA0X62_BV050HDM_HD";
+		qcom,mdss-dsi-panel-controller = <&mdss_dsi0>;
+		qcom,mdss-dsi-panel-type = "dsi_video_mode";
+		qcom,mdss-dsi-panel-destination = "display_1";
+		qcom,cont-splash-enabled;
+		qcom,mdss-dsi-panel-framerate = <60>;
+		qcom,mdss-dsi-virtual-channel-id = <0>;
+		qcom,mdss-dsi-stream = <0>;
+		qcom,mdss-dsi-panel-width = <720>;
+		qcom,mdss-dsi-panel-height = <1280>;
+		qcom,mdss-pan-physical-width-dimension = <72>; /* <Width> real size of panel in mm */
+		qcom,mdss-pan-physical-height-dimension = <129>; /*<Height> real size of panel in mm */
+		qcom,mdss-dsi-lp11-init;
+		qcom,mdss-dsi-init-delay-us = <20000>;
+		qcom,mdss-dsi-h-front-porch = <40>;
+		qcom,mdss-dsi-h-back-porch = <96>;
+		qcom,mdss-dsi-h-pulse-width = <24>;
+		qcom,mdss-dsi-h-sync-skew = <0>;
+		qcom,mdss-dsi-v-back-porch = <12>;
+		qcom,mdss-dsi-v-front-porch = <16>;
+		qcom,mdss-dsi-v-pulse-width = <4>;
+		qcom,mdss-dsi-panel-clockrate = <481000000>;
+		qcom,mdss-dsi-h-left-border = <0>;
+		qcom,mdss-dsi-h-right-border = <0>;
+		qcom,mdss-dsi-v-top-border = <0>;
+		qcom,mdss-dsi-v-bottom-border = <0>;
+		qcom,mdss-dsi-bpp = <24>;
+		qcom,mdss-dsi-color-order = <0>;
+		qcom,mdss-dsi-underflow-color = <0xff>;
+		qcom,mdss-dsi-border-color = <0>;
+		qcom,mdss-dsi-dma-trigger = "trigger_sw";
+		qcom,mdss-dsi-mdp-trigger = "none";
+		qcom,mdss-dsi-bl-min-level = <1>;
+		qcom,mdss-dsi-bl-max-level = <255>;
+		qcom,mdss-brightness-max-level = <306>;
+		qcom,mdss-dsi-bl-pmic-control-type = "bl_ctrl_dcs";
+		qcom,mdss-dsi-lane-0-state;
+		qcom,mdss-dsi-lane-1-state;
+		qcom,mdss-dsi-lane-2-state;
+		qcom,mdss-dsi-lane-3-state;
+		qcom,mdss-dsi-bllp-eof-power-mode;
+		qcom,mdss-dsi-bllp-power-mode;
+		qcom,mdss-dsi-traffic-mode = "burst_mode";
+		qcom,mdss-dsi-force-clk-lane-hs;
+		qcom,mdss-dsi-reset-sequence = <1 20>, <0 1>, <1 20>;
+		qcom,mdss-dsi-h-sync-pulse = <0>;
+/*		qcom,mdss-dsi-hfp-power-mode;*/
+		qcom,mdss-dsi-hbp-power-mode;
+/*		qcom,mdss-dsi-hsa-power-mode;*/
+		qcom,mdss-dsi-panel-timings = [8B 1A 10 00 3E 40 16 1E 15 03 04 00];
+		qcom,mdss-dsi-t-clk-pre = <0x1B>;
+		qcom,mdss-dsi-t-clk-post = <0x04>;
+		qcom,mdss-dsi-on-command = [
+               39 01 00 00 00 00 03 F0 5A 5A
+               39 01 00 00 00 00 03 F1 5A 5A
+               39 01 00 00 00 00 03 FC A5 A5
+               39 01 00 00 00 00 03 D0 00 10
+               39 01 00 00 00 00 02 B1 12
+               39 01 00 00 00 00 05 B2 14 22 2F 18
+               39 01 00 00 00 00 02 B3 11
+               39 01 00 00 00 00 0A BA 03 19 19 11 03 05 18 18 77
+               39 01 00 00 00 00 04 BC 00 4E 0B
+               39 01 00 00 00 00 04 C0 80 80 30
+               39 01 00 00 01 00 02 C1 01	/* CABC(MIE) off & manual dimming off */
+               39 01 00 00 0A 00 02 C2 00
+               39 01 00 00 00 00 04 C3 40 00 28
+               39 01 00 00 00 00 09 EE A8 00 95 00 A8 00 95 00
+               39 01 00 00 00 00 06 F2 02 10 10 6F 32
+               39 01 00 00 00 00 0B F3 01 93 20 22 80 05 25 3C 26 00
+               39 01 00 00 00 00 21 F7 01 1B 08 0C 09 0D 01 01 01 04 06
+			01 01 00 00 1A 01 1B 0A 0E 0B 0F 01 01 01 05
+			07 01 01 00 00 1A
+               39 01 00 00 00 00 12 EF 34 12 98 BA 10 80 24 80 80 80 00
+			00 00 44 A0 82 00
+               39 01 00 00 00 00 07 F6 60 25 05 00 00 03
+               39 01 00 00 00 00 0E CD 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E
+		 39 01 00 00 00 00 0E CE 00 00 00 00 00 00 00 00 00 00 00 00 00
+               39 01 00 00 00 00 02 53 24
+               39 01 00 00 00 00 02 55 00
+               39 01 00 00 00 00 12 FA 01 3F 09 0C 00 01 06 04 04 0C 10
+			15 16 18 1C 20 2A
+               39 01 00 00 00 00 12 FB 01 3F 09 0C 00 01 06 04 04 0C 10
+			15 16 18 1C 20 2A
+               39 01 00 00 00 00 03 F0 A5 A5
+               39 01 00 00 00 00 03 F1 A5 A5
+               39 01 00 00 00 00 03 FC 5A 5A
+               05 01 00 00 78 00 02 11 00
+               05 01 00 00 14 00 02 29 00
+		];
+		qcom,mdss-dsi-off-command = [
+					39 01 00 00 00 00 02 22 00
+					05 01 00 00 0A 00 02 28 00
+					05 01 00 00 78 00 02 10 00
+		];
+		qcom,mdss-dsi-on-command-state = "dsi_lp_mode";
+		qcom,mdss-dsi-off-command-state = "dsi_hs_mode";
+		qcom,esd_irq_gpio = <&msm_gpio 60 0>;
+		qcom,esd-check-enabled;
+		qcom,mdss-dsi-panel-status-check-mode="reg_read_irq";
+		qcom,mdss-dsi-panel-status-value = <1>;
+		qcom,mdss-dsi-panel-status-irq-trigger="rising";
+/*
+ * ************************************************************************************************************************************
+ *
+ *
+ *			Below  parameters are samsung dependent thigs
+ *
+ *
+ * ************************************************************************************************************************************
+ */
+ 		samsung,tft-common-support;
+		samsung,mdnie-tuning-enable-tft;
+		samsung,lcd-display-format-bgr;
+
+		samsung,level2_key_enable_tx_cmds_revA = [
+			39 01 00 00 00 00 03 F0 5A 5A
+		];
+		samsung,level2_key_disable_tx_cmds_revA = [
+			39 01 00 00 00 00 03 F0 A5 A5
+		];
+		samsung,packet_size_tx_cmds_revA = [
+			37 01 00 00 00 00 02 07 00
+		];
+		/*
+		 * First parameters can be changed
+		 * by function of samsung_nv_read()
+		 * because of that means offset of
+		 * read position
+		 */
+		samsung,reg_read_pos_tx_cmds_revA = [
+			15 01 00 00 00 00 02 B0 00
+		];
+		samsung,mtp_read_sysfs_rx_cmds_revA = [ 06 01 00 00 00 00 01 01 01 01];
+		samsung,manufacture_id0_rx_cmds_revA = [06 01 00 00 00 00 01 da 03 00];
+		samsung,manufacture_id1_rx_cmds_revA = [06 01 00 00 00 00 01 db 03 00];
+		samsung,manufacture_id2_rx_cmds_revA = [06 01 00 00 00 00 01 dc 03 00];
+/*
+		* Command sets for CABC control
+*/
+		samsung,panel-vendor = "BOE";
+		samsung,tft_pwm_tx_cmds_revA=[
+			39 01 00 00 00 00 02 51 FF/*First command should be PWM duty change command*/
+		];
+		samsung,cabc_on_tx_cmds_revA = [
+			39 01 00 00 00 00 02 55 01
+		];
+		samsung,cabc_off_tx_cmds_revA = [
+			39 01 00 00 00 00 02 55 00
+		];
+		/*
+		* ************************************************************************************************************************
+		* Scaled level to index mappings
+		* ************************************************************************************************************************
+		*/
+	samsung,scaled_level_map_table_revA = <
+		/*<idx>	  <from>  <till> <scaled_level> */
+			0		0		0		0
+			1		1		2		2
+			2		3		4		3
+			3		5		7		5
+			4		8		10		7
+			5		11		13		9
+			6		14		16		11
+			7		17		19		13
+			8		20		22		15
+			9		23		25		17
+			10		26		28		19
+			11		29		31		21
+			12		32		34		23
+			13		35		37		25
+			14		38		40		27
+			15		41		43		29
+			16		44		46		31
+			17		47		49		33
+			18		50		52		35
+			19		53		55		37
+			20		56		58		39
+			21		59		61		41
+			22		62		64		43
+			23		65		67		45
+			24		68		70		47
+			25		71		73		49
+			26		74		76		51
+			27		77		79		53
+			28		80		82		55
+			29		83		85		57
+			30		86		88		59
+			31		89		91		61
+			32		92		94		63
+			33		95		97		65
+			34		98		100		67
+			35		101		103		69
+			36		104		106		71
+			37		107		109		73
+			38		110		112		75
+			39		113		115		77
+			40		116		118		79
+			41		119		121		81
+			42		122		124		83
+			43		125		127		85
+			44		128		130		87
+			45		131		133		89
+			46		134		136		91
+			47		137		139		93
+			48		140		142		95
+			49		143		145		97
+			50		146		148		99
+			51		149		151		102
+			52		152		154		105
+			53		155		157		108
+			54		158		160		111
+			55		161		163		114
+			56		164		166		117
+			57		167		169		120
+			58		170		172		123
+			59		173		175		126
+			60		176		178		129
+			61		179		181		132
+			62		182		184		135
+			63		185		187		138
+			64		188		190		141
+			65		191		193		144
+			66		194		196		147
+			67		197		199		150
+			68		200		202		153
+			69		203		205		156
+			70		206		208		159
+			71		209		211		162
+			72		212		214		165
+			73		215		217		168
+			74		218		220		171
+			75		221		223		174
+			76		224		226		177
+			77		227		229		180
+			78		230		232		183
+			79		233		235		186
+			80		236		238		189
+			81		239		241		192
+			82		242		244		195
+			83		245		247		198
+			84		248		250		201
+			85		251		253		204
+			86		254		255		207
+		>;
+		samsung,hbm_candela_map_table_revA = <
+			0	0	255	255	0
+			0	256	306	306	6
+		>;
+	};
+};
+&soc {
+	mdss_dsi0: qcom,mdss_dsi@1a98000 {
+		qcom,dsi-pref-prim-pan = <&ss_dsi_panel_S6D7AA0X62_BV050HDM_HD>;
+	};
+};
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/lm3632bl.c b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/lm3632bl.c
new file mode 100755
index 00000000000..a64e73c5ffe
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/lm3632bl.c
@@ -0,0 +1,422 @@
+/*
+ * rt8555-backlight.c - Platform data for RT8555 backlight driver
+ *
+ * Copyright (C) 2011 Samsung Electronics
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ */
+#include <linux/kernel.h>
+#include <asm/unaligned.h>
+#include <mach/board.h>
+#include <linux/input/mt.h>
+#include <linux/of_gpio.h>
+#include <linux/regulator/consumer.h>
+#include <linux/module.h>
+#include <linux/input.h>
+#include <linux/init.h>
+#include <linux/slab.h>
+#include <linux/i2c.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/delay.h>
+#include <linux/platform_device.h>
+#include <linux/gpio.h>
+#include <linux/miscdevice.h>
+#include <linux/regulator/consumer.h>
+#include <asm/mach-types.h>
+#include <linux/device.h>
+#include <linux/of_gpio.h>
+#include <linux/mfd/lm3632.h>
+#include "ss_dsi_panel_S6D7AA0X62_BV050HDM.h"
+
+#include "../../mdss.h"
+#include "../../mdss_panel.h"
+#include "../../mdss_mdp.h"
+
+/*#define CONFIG_BLIC_TUNING 1*/
+
+struct lm3632_bl {
+	struct device *dev;
+	struct backlight_device *bl_dev;
+	struct lm3632 *lm3632;
+	struct lm3632_backlight_platform_data *pdata;
+	struct pwm_device *pwm;
+};
+struct tuning_table {
+	u8* table;
+	u8 table_length;
+};
+
+struct backlight_info {
+	struct i2c_client			*client;
+	struct lm3632_backlight_platform_data	*pdata;
+	struct tuning_table bl_ic_settings;
+	struct tuning_table bl_ic_outdoor_settings;
+	struct tuning_table bl_ic_normal_settings;
+	struct tuning_table bl_control;
+	struct lm3632 *lm3632;
+};
+
+static struct backlight_info *bl_info;
+static const char *bl_ic_name;
+
+static void mdss_backlight_ic_power_on(int enable)
+{
+	struct backlight_info *info = bl_info;
+	int i;
+	struct samsung_display_driver_data *vdd = samsung_get_vdd();
+	if (!info) {
+		pr_info("%s error bl_info", __func__);
+		return ;
+	}
+	pr_info("%s :enable:[%d]\n", __func__,enable);
+	if(enable) {
+		if (gpio_is_valid(info->pdata->gpio_backlight_en))
+			gpio_set_value(info->pdata->gpio_backlight_en,1);
+		msleep(5);
+		for (i = 0; i <info->bl_ic_settings.table_length;i=i+2)
+			lm3632_write_byte(info->lm3632, info->bl_ic_settings.table[i], info->bl_ic_settings.table[i+1]);
+		/* In case of PBA booting, turn bl_out off */
+		if (!mdss_panel_attach_get(vdd->ctrl_dsi[DISPLAY_1]))
+			lm3632_write_byte(info->lm3632, 0x0A, 0x00);
+		if (gpio_is_valid(info->pdata->gpio_backlight_panel_enp))
+			gpio_set_value(info->pdata->gpio_backlight_panel_enp,1);
+		msleep(5);
+		if (gpio_is_valid(info->pdata->gpio_backlight_panel_enn))
+			gpio_set_value(info->pdata->gpio_backlight_panel_enn,1);
+	} else {
+		if (gpio_is_valid(info->pdata->gpio_backlight_panel_enn))
+			gpio_set_value(info->pdata->gpio_backlight_panel_enn,0);
+		msleep(5);
+		if (gpio_is_valid(info->pdata->gpio_backlight_panel_enp))
+			gpio_set_value(info->pdata->gpio_backlight_panel_enp,0);
+		if (gpio_is_valid(info->pdata->gpio_backlight_en))
+			gpio_set_value(info->pdata->gpio_backlight_en,0);
+		msleep(5);
+	}
+}
+
+#if 0
+static void pwm_backlight_control_i2c(int scaled_level)
+{
+	struct backlight_info *info = bl_info;
+	int data, ret;
+	if (!info) {
+		pr_info("%s error pinfo", __func__);
+		return ;
+	}
+	pr_info("%s :BL Level :%d\n", __func__,scaled_level);
+	if (!(info->bl_control.table)) {
+		pr_info("%s : No backlight configuration :-", __func__);
+		return ;
+	}
+
+   /* Following taken from lm3632_bl_set_brightness provided by TI for i2c based control*/
+	data = scaled_level & LM3632_BRT_LSB_MASK;
+	ret = lm3632_update_bits(info->lm3632, info->bl_control.table[0],
+				 LM3632_BRT_LSB_MASK, data);
+	if (ret)
+		return;
+
+	data = (scaled_level >> LM3632_BRT_MSB_SHIFT) & 0xFF;
+
+	lm3632_write_byte(info->lm3632, info->bl_control.table[2], data);
+}
+#endif
+static void pwm_backlight_outdoor_control(int enable)
+{
+	int i;
+	struct backlight_info *info = bl_info;
+	if (!info) {
+		pr_info("%s error bl_info", __func__);
+		return ;
+	}
+	pr_info("%s :enable:[%d]\n", __func__,enable);
+	msleep(1);
+	if(enable) {
+		for (i = 0; i <info->bl_ic_outdoor_settings.table_length;i=i+2)
+			lm3632_write_byte(info->lm3632, info->bl_ic_outdoor_settings.table[i], info->bl_ic_outdoor_settings.table[i+1]);
+	} else {
+		for (i = 0; i <info->bl_ic_normal_settings.table_length;i=i+2)
+			lm3632_write_byte(info->lm3632, info->bl_ic_normal_settings.table[i], info->bl_ic_normal_settings.table[i+1]);
+	}
+}
+
+#if defined(CONFIG_BLIC_TUNING)
+static int atoi(const char *name, int *l)
+{
+	int val = 0;
+	if(*name == '\0' || *name == '\n')
+		return -1;
+	for (;; name++) {
+		(*l)++;
+		switch (*name) {
+			case '0' ... '9':
+					val = 16*val+(*name-'0');
+					break;
+			case 'A' ... 'F':
+				val = 16*val+(*name-'A') + 10;
+				break;
+			case 'a' ... 'f':
+				val = 10*val+(*name-'a') + 10;
+				break;
+			case ' ':
+				pr_debug("%s: val is: %d\n", __func__, val);
+				return val;
+				break;
+			case '\n':
+				pr_debug("%s: val is: %d\n", __func__, val);
+				return val;
+				break;
+			default:
+				return -1;
+		}
+	}
+}
+int backlight_i2c_read_sys(u8 reg, u8* val)
+{
+	int err = 0;
+	struct backlight_info *info = bl_info;
+    err = lm3632_read_byte(info->lm3632, reg, val);
+	return err;
+}
+int backlight_i2c_write_sys(u8 reg,  u8 val)
+{
+	int err = 0;
+	struct backlight_info *info = bl_info;
+    err = lm3632_write_byte(info->lm3632, reg, val);
+	return err;
+}
+static ssize_t backlight_i2c_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)
+{
+	u8 arr[6];
+	u32 i, cnt=0;
+	u8 val=0;
+	for(i=0; i<3; i++)
+		arr[i] = atoi(buf+cnt, &cnt);
+	for(i=0; i<3; i++) {
+		if(arr[i] == -1)
+			break;
+	}
+	if(i<3) {
+		pr_err("%s: Invalid value entered\n", __func__);
+		return size;
+	}
+	backlight_i2c_read_sys(arr[0],&val);
+	pr_info("%s: Before REG 0x%02X  = 0x%02X\n", __func__,arr[0],val);
+	backlight_i2c_write_sys(arr[0],arr[1]);
+	pr_info("%s: After REG 0x%02Xh =  0x%02X\n", __func__,arr[0],arr[1]);
+	return size;
+}
+static ssize_t backlight_i2c_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	static int string_size = 400;
+	char temp[string_size];
+	char temp1[40];
+	int i;
+	u8 val=0;
+	snprintf(temp, 34, "BL IC Current register settings\n");
+	for(i=0; i<0x20; i++) {
+		backlight_i2c_read_sys(i,&val);
+		snprintf(temp1, 22, "REG 0x%02Xh = 0x%02X\n", i,val);
+		strncat(temp, temp1, 22);
+	}
+	strlcat(buf, temp, string_size);
+	return strnlen(buf, string_size);
+}
+static ssize_t backlight_ic_name_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	if(bl_ic_name)
+		snprintf(buf, 50, "BACKLIGHT IC NAME : %s\n",bl_ic_name);
+
+	return strnlen(buf, 50);
+}
+static DEVICE_ATTR(bl_ic_tune, 0666,backlight_i2c_show , backlight_i2c_store);
+static DEVICE_ATTR(bl_ic_name, S_IRUGO,backlight_ic_name_show , NULL);
+#endif
+
+static void backlight_request_gpio(struct lm3632_backlight_platform_data *pdata)
+{
+	int ret;
+	if (gpio_is_valid(pdata->gpio_backlight_en)) {
+		ret = gpio_request(pdata->gpio_backlight_en, "backlight_en");
+		if (ret) {
+			printk(KERN_ERR "%s: unable to request backlight_en [%d]\n",
+				__func__, pdata->gpio_backlight_en);
+			return;
+		}
+	}
+	if (gpio_is_valid(pdata->gpio_backlight_panel_enp)) {
+		ret = gpio_request(pdata->gpio_backlight_panel_enp, "backlight_en");
+		if (ret) {
+			printk(KERN_ERR "%s: unable to request gpio_backlight_panel_enp [%d]\n",
+				__func__, pdata->gpio_backlight_panel_enp);
+			return;
+		}
+	}
+	if (gpio_is_valid(pdata->gpio_backlight_panel_enn)) {
+		ret = gpio_request(pdata->gpio_backlight_panel_enn, "backlight_en");
+		if (ret) {
+			printk(KERN_ERR "%s: unable to request gpio_backlight_panel_enn [%d]\n",
+				__func__, pdata->gpio_backlight_panel_enn);
+			return;
+		}
+	}
+
+}
+static int mdss_samsung_parse_backlight_settings(struct device *dev,struct tuning_table* bl_tune, char *keystring)
+{
+	const char *data;
+	int   len = 0;
+	struct device_node *np = dev->of_node;
+	data = of_get_property(np, keystring, &len);
+	if (!data) {
+		pr_info("%s:%d, Unable to read table %s ", __func__, __LINE__, keystring);
+		return -EINVAL;
+	} else
+		pr_err("%s:Success to read table %s\n", __func__, keystring);
+	if ((len % 2) != 0) {
+		pr_err("%s:%d, Incorrect table entries for %s",
+					__func__, __LINE__, keystring);
+		return -EINVAL;
+	}
+	bl_tune->table= kzalloc(sizeof(char) * len, GFP_KERNEL);
+	bl_tune->table_length = len;
+	if (!bl_tune->table)
+		return -ENOMEM;
+	memcpy(bl_tune->table, data, len);
+	return 0;
+
+}
+
+static int backlight_parse_dt(struct device *dev,
+			struct lm3632_backlight_platform_data *pdata)
+{
+	struct device_node *np = dev->of_node;
+
+	pdata->gpio_backlight_en = of_get_named_gpio_flags(np, "backlight-en-gpio",
+				0, &pdata->en_gpio_flags);
+	pdata->gpio_backlight_panel_enp= of_get_named_gpio_flags(np, "backlight-panel-enp-gpio",
+				0, &pdata->panel_enp_gpio_flags);
+	pdata->gpio_backlight_panel_enn= of_get_named_gpio_flags(np, "backlight-panel-enn-gpio",
+				0, &pdata->panel_enn_gpio_flags);
+
+	bl_ic_name = of_get_property(np, "backlight-ic-name", NULL);
+	if (!bl_ic_name) {
+		pr_info("%s:%d, backlight IC name not specified\n",__func__, __LINE__);
+	} else {
+		pr_info("%s: Backlight IC Name = %s\n", __func__,bl_ic_name);
+	}
+
+	pr_info("%s gpio en : %d panel_enp:%d panel_enn : %d \n",__func__,
+		pdata->gpio_backlight_en,pdata->gpio_backlight_panel_enp,pdata->gpio_backlight_panel_enn);
+	return 0;
+}
+
+static int lm3632_bl_probe(struct platform_device *pdev)
+{
+	struct lm3632 *lm3632 = dev_get_drvdata(pdev->dev.parent);
+	struct lm3632_backlight_platform_data *pdata = lm3632->pdata->bl_pdata;
+	static struct lm3632_bl *lm3632_bl;
+	struct backlight_info *info;
+	struct samsung_display_driver_data *vdd = samsung_get_vdd();
+
+	int error = 0;
+#if defined(CONFIG_BLIC_TUNING)
+	struct class *backlight_class;
+	struct device *backlight_dev;
+#endif
+	dev_info(&pdev->dev, "%s", __func__);
+
+	lm3632_bl = devm_kzalloc(&pdev->dev, sizeof(*lm3632_bl), GFP_KERNEL);
+	if (!lm3632_bl)
+		return -ENOMEM;
+
+	lm3632_bl->dev = &pdev->dev;
+	lm3632_bl->lm3632 = lm3632;
+	lm3632_bl->pdata = pdata;
+
+	if (!lm3632_bl->pdata) {
+		pdata = devm_kzalloc(&pdev->dev,
+			sizeof(struct lm3632_backlight_platform_data), GFP_KERNEL);
+		if (!pdata) {
+			dev_info(&pdev->dev, "Failed to allocate memory\n");
+			return -ENOMEM;
+		}
+		if (IS_ENABLED(CONFIG_OF))
+			error = backlight_parse_dt(&pdev->dev, pdata);
+		else
+			return -ENODEV;
+
+		if (error)
+			return error;
+	}
+
+	backlight_request_gpio(pdata);
+
+	bl_info = info = kzalloc(sizeof(*info), GFP_KERNEL);
+	if (!info) {
+		dev_info(&pdev->dev, "%s: fail to memory allocation.\n", __func__);
+		return -ENOMEM;
+	}
+
+	info->pdata = pdata;
+	info->lm3632 = lm3632;
+	mdss_samsung_parse_backlight_settings(&pdev->dev,&info->bl_ic_settings,"backlight-ic-tuning");
+	mdss_samsung_parse_backlight_settings(&pdev->dev,&info->bl_ic_outdoor_settings,"backlight-ic-tuning-outdoor");
+	mdss_samsung_parse_backlight_settings(&pdev->dev,&info->bl_ic_normal_settings,"backlight-ic-tuning-normal");
+	mdss_samsung_parse_backlight_settings(&pdev->dev,&info->bl_control,"backlight-i2c-bl-control");
+#if defined(CONFIG_BLIC_TUNING)
+	backlight_class = class_create(THIS_MODULE, "bl-dbg");
+	backlight_dev = device_create(backlight_class, NULL, 0, NULL,  "ic-tuning");
+	if (IS_ERR(backlight_dev))
+		pr_err("Failed to create device(backlight_dev)!\n");
+	else {
+		if (device_create_file(backlight_dev, &dev_attr_bl_ic_tune) < 0)
+			pr_err("Failed to create device file(%s)!\n", dev_attr_bl_ic_tune.attr.name);
+		if (device_create_file(backlight_dev, &dev_attr_bl_ic_name) < 0)
+			pr_err("Failed to create device file(%s)!\n", dev_attr_bl_ic_name.attr.name);
+	}
+#endif
+	  vdd->panel_func.samsung_backlight_ic_power_on = mdss_backlight_ic_power_on;
+	  vdd->panel_func.samsung_bl_ic_outdoor = pwm_backlight_outdoor_control;
+
+
+      return error;
+}
+
+static int lm3632_bl_remove(struct platform_device *pdev)
+{
+	return 0;
+}
+
+#ifdef CONFIG_OF
+static const struct of_device_id lm3632_bl_of_match[] = {
+	{ .compatible = "ti,lm3632-backlight", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, lm3632_bl_of_match);
+#endif
+
+static struct platform_driver lm3632_bl_driver = {
+	.probe = lm3632_bl_probe,
+	.remove = lm3632_bl_remove,
+	.driver = {
+		.name = "lm3632-backlight",
+		.owner = THIS_MODULE,
+		.of_match_table = of_match_ptr(lm3632_bl_of_match),
+	},
+};
+module_platform_driver(lm3632_bl_driver);
+
+MODULE_DESCRIPTION("TI LM3632 Backlight Driver");
+MODULE_AUTHOR("Milo Kim");
+MODULE_LICENSE("GPL");
+MODULE_ALIAS("platform:lm3632-backlight");
+
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h
new file mode 100644
index 00000000000..84139567023
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h
@@ -0,0 +1,2226 @@
+/*
+ * =================================================================
+ *
+ *
+ *	Description:  samsung display common file
+ *
+ *	Author: jb09.kim
+ *	Company:  Samsung Electronics
+ *
+ * ================================================================
+ */
+/*
+<one line to give the program's name and a brief idea of what it does.>
+Copyright (C) 2012, Samsung Electronics. All rights reserved.
+
+*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+*/
+
+
+#ifndef _SS_DSI_MDNIE_S6D7AA0X62_BV050HDM_
+#define _SS_DSI_MDNIE_S6D7AA0X62_BV050HDM_
+
+/* 2015.04.08 */
+
+#include "../ss_dsi_mdnie_lite_common.h"
+
+#define MDNIE_COLOR_BLINDE_CMD_OFFSET 1
+
+#define ADDRESS_SCR_WHITE_RED   0x7A
+#define ADDRESS_SCR_WHITE_GREEN 0x7C
+#define ADDRESS_SCR_WHITE_BLUE  0x7E
+
+#define MDNIE_STEP1_INDEX 1
+#define MDNIE_STEP2_INDEX 2
+
+static char level_1_key_on[] = {
+	0xF0,
+	0x5A, 0x5A
+};
+
+static char level_1_key_off[] = {
+	0xF0,
+	0xA5, 0xA5
+};
+
+static char DSI0_BYPASS_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_BYPASS_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_BYPASS_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_BYPASS_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_BYPASS_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_BYPASS_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x00, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_NEGATIVE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_NEGATIVE_MDNIE_2[] ={
+0xE9,
+0xff, //scr Cr Yb
+0x00, //scr Rr Bb
+0x00, //scr Cg Yg
+0xff, //scr Rg Bg
+0x00, //scr Cb Yr
+0xff, //scr Rb Br
+0x00, //scr Mr Mb
+0xff, //scr Gr Gb
+0xff, //scr Mg Mg
+0x00, //scr Gg Gg
+0x00, //scr Mb Mr
+0xff, //scr Gb Gr
+0x00, //scr Yr Cb
+0xff, //scr Br Rb
+0x00, //scr Yg Cg
+0xff, //scr Bg Rg
+0xff, //scr Yb Cr
+0x00, //scr Bb Rr
+0x00, //scr Wr Wb
+0xff, //scr Kr Kb
+0x00, //scr Wg Wg
+0xff, //scr Kg Kg
+0x00, //scr Wb Wr
+0xff, //scr Kb Kr
+};
+
+static char DSI0_NEGATIVE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_NEGATIVE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_NEGATIVE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_NEGATIVE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0, 
+0x05, //VSIZE
+0x00, 
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GRAYSCALE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GRAYSCALE_MDNIE_2[] ={
+0xE9,
+0xe2, //scr Cr Yb
+0x1d, //scr Rr Bb
+0xe2, //scr Cg Yg
+0x1d, //scr Rg Bg
+0xe2, //scr Cb Yr
+0x1d, //scr Rb Br
+0x69, //scr Mr Mb
+0x96, //scr Gr Gb
+0x69, //scr Mg Mg
+0x96, //scr Gg Gg
+0x69, //scr Mb Mr
+0x96, //scr Gb Gr
+0xb3, //scr Yr Cb
+0x4c, //scr Br Rb
+0xb3, //scr Yg Cg
+0x4c, //scr Bg Rg
+0xb3, //scr Yb Cr
+0x4c, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_GRAYSCALE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GRAYSCALE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GRAYSCALE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_GRAYSCALE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_2[] ={
+0xE9,
+0x1d, //scr Cr Yb
+0xe2, //scr Rr Bb
+0x1d, //scr Cg Yg
+0xe2, //scr Rg Bg
+0x1d, //scr Cb Yr
+0xe2, //scr Rb Br
+0x96, //scr Mr Mb
+0x69, //scr Gr Gb
+0x96, //scr Mg Mg
+0x69, //scr Gg Gg
+0x96, //scr Mb Mr
+0x69, //scr Gb Gr
+0x4c, //scr Yr Cb
+0xb3, //scr Br Rb
+0x4c, //scr Yg Cg
+0xb3, //scr Bg Rg
+0x4c, //scr Yb Cr
+0xb3, //scr Bb Rr
+0x00, //scr Wr Wb
+0xff, //scr Kr Kb
+0x00, //scr Wg Wg
+0xff, //scr Kg Kg
+0x00, //scr Wb Wr
+0xff, //scr Kb Kr
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_UI_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_UI_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_UI_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_UI_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_UI_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+static char DSI0_UI_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_OUTDOOR_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_OUTDOOR_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_OUTDOOR_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x7b, //curve 1 a
+0x03, //curve 2 b
+0x48, //curve 2 a
+0x08, //curve 3 b
+0x32, //curve 3 a
+0x08, //curve 4 b
+0x32, //curve 4 a
+0x08, //curve 5 b
+0x32, //curve 5 a
+0x08, //curve 6 b
+0x32, //curve 6 a
+0x08, //curve 7 b
+0x32, //curve 7 a
+0x10, //curve 8 b
+0x28, //curve 8 a
+0x10, //curve 9 b
+0x28, //curve 9 a
+0x10, //curve10 b
+0x28, //curve10 a
+0x10, //curve11 b
+0x28, //curve11 a
+0x10, //curve12 b
+0x28, //curve12 a
+};
+static char DSI0_OUTDOOR_MDNIE_4[] ={
+0xEB,
+0x19, //curve13 b
+0x22, //curve13 a
+0x19, //curve14 b
+0x22, //curve14 a
+0x19, //curve15 b
+0x22, //curve15 a
+0x19, //curve16 b
+0x22, //curve16 a
+0x19, //curve17 b
+0x22, //curve17 a
+0x19, //curve18 b
+0x22, //curve18 a
+0x23, //curve19 b
+0x1e, //curve19 a
+0x2e, //curve20 b
+0x1b, //curve20 a
+0x33, //curve21 b
+0x1a, //curve21 a
+0x40, //curve22 b
+0x18, //curve22 a
+0x48, //curve23 b
+0x17, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_OUTDOOR_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+static char DSI0_OUTDOOR_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x03, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_VIDEO_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_VIDEO_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_VIDEO_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x1c, //curve 1 a
+0x00, //curve 2 b
+0x1c, //curve 2 a
+0x00, //curve 3 b
+0x1c, //curve 3 a
+0x00, //curve 4 b
+0x1c, //curve 4 a
+0x00, //curve 5 b
+0x1c, //curve 5 a
+0x00, //curve 6 b
+0x1c, //curve 6 a
+0x00, //curve 7 b
+0x1c, //curve 7 a
+0x00, //curve 8 b
+0x1c, //curve 8 a
+0x00, //curve 9 b
+0x1c, //curve 9 a
+0x00, //curve10 b
+0x1c, //curve10 a
+0x00, //curve11 b
+0x1c, //curve11 a
+0x00, //curve12 b
+0x1c, //curve12 a
+};
+
+static char DSI0_VIDEO_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x1c, //curve13 a
+0x0d, //curve14 b
+0xa4, //curve14 a
+0x0d, //curve15 b
+0xa4, //curve15 a
+0x0d, //curve16 b
+0xa4, //curve16 a
+0x0d, //curve17 b
+0xa4, //curve17 a
+0x0d, //curve18 b
+0xa4, //curve18 a
+0x0d, //curve19 b
+0xa4, //curve19 a
+0x0d, //curve20 b
+0xa4, //curve20 a
+0x0d, //curve21 b
+0xa4, //curve21 a
+0x25, //curve22 b
+0x1c, //curve22 a
+0x4a, //curve23 b
+0x17, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_VIDEO_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+
+static char DSI0_VIDEO_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x07, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_CAMERA_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_CAMERA_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_CAMERA_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_CAMERA_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_CAMERA_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+
+static char DSI0_CAMERA_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GALLERY_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GALLERY_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_GALLERY_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GALLERY_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GALLERY_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+
+static char DSI0_GALLERY_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_VT_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_VT_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_VT_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_VT_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_VT_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+
+static char DSI0_VT_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x06, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_BROWSER_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_BROWSER_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_BROWSER_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_BROWSER_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_BROWSER_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1 0.15
+0x88,
+0x1f, //cc r2
+0xa6,
+0x1f, //cc r3
+0xd2,
+0x1f, //cc g1
+0xee,
+0x04, //cc g2
+0x3f,
+0x1f, //cc g3
+0xd2,
+0x1f, //cc b1
+0xee,
+0x1f, //cc b2
+0xa6,
+0x04, //cc b3
+0x6c,
+};
+static char DSI0_BROWSER_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x33, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_EBOOK_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_EBOOK_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xd6, //scr Wr Wb
+0x00, //scr Kr Kb
+0xea, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_EBOOK_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_EBOOK_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+
+};
+static char DSI0_EBOOK_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_EBOOK_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_EMAIL_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_EMAIL_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xf7, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_EMAIL_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_EMAIL_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_EMAIL_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+static char DSI0_EMAIL_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static struct dsi_cmd_desc DSI0_BYPASS_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_1)}, DSI0_BYPASS_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_2)}, DSI0_BYPASS_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_3)}, DSI0_BYPASS_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_4)}, DSI0_BYPASS_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_5)}, DSI0_BYPASS_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_6)}, DSI0_BYPASS_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_CAMERA_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_1)}, DSI0_CAMERA_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_2)}, DSI0_CAMERA_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_3)}, DSI0_CAMERA_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_4)}, DSI0_CAMERA_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_5)}, DSI0_CAMERA_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_6)}, DSI0_CAMERA_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_COLOR_ADJUSTMENT_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_1)}, DSI0_COLOR_ADJUSTMENT_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_2)}, DSI0_COLOR_ADJUSTMENT_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_3)}, DSI0_COLOR_ADJUSTMENT_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_4)}, DSI0_COLOR_ADJUSTMENT_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_5)}, DSI0_COLOR_ADJUSTMENT_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_6)}, DSI0_COLOR_ADJUSTMENT_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_EBOOK_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_1)}, DSI0_EBOOK_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_2)}, DSI0_EBOOK_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_3)}, DSI0_EBOOK_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_4)}, DSI0_EBOOK_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_5)}, DSI0_EBOOK_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_6)}, DSI0_EBOOK_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_EMAIL_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_1)}, DSI0_EMAIL_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_2)}, DSI0_EMAIL_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_3)}, DSI0_EMAIL_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_4)}, DSI0_EMAIL_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_5)}, DSI0_EMAIL_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_6)}, DSI0_EMAIL_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_GALLERY_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_1)}, DSI0_GALLERY_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_2)}, DSI0_GALLERY_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_3)}, DSI0_GALLERY_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_4)}, DSI0_GALLERY_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_5)}, DSI0_GALLERY_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_6)}, DSI0_GALLERY_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_NEGATIVE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_1)}, DSI0_NEGATIVE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_2)}, DSI0_NEGATIVE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_3)}, DSI0_NEGATIVE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_4)}, DSI0_NEGATIVE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_5)}, DSI0_NEGATIVE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_6)}, DSI0_NEGATIVE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_GRAYSCALE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_1)}, DSI0_GRAYSCALE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_2)}, DSI0_GRAYSCALE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_3)}, DSI0_GRAYSCALE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_4)}, DSI0_GRAYSCALE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_5)}, DSI0_GRAYSCALE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_6)}, DSI0_GRAYSCALE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_GRAYSCALE_NEGATIVE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_1)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_2)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_3)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_4)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_5)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_6)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_OUTDOOR_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_1)}, DSI0_OUTDOOR_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_2)}, DSI0_OUTDOOR_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_3)}, DSI0_OUTDOOR_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_4)}, DSI0_OUTDOOR_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_5)}, DSI0_OUTDOOR_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_6)}, DSI0_OUTDOOR_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_UI_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_1)}, DSI0_UI_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_2)}, DSI0_UI_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_3)}, DSI0_UI_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_4)}, DSI0_UI_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_5)}, DSI0_UI_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_6)}, DSI0_UI_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_VIDEO_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_1)}, DSI0_VIDEO_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_2)}, DSI0_VIDEO_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_3)}, DSI0_VIDEO_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_4)}, DSI0_VIDEO_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_5)}, DSI0_VIDEO_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_6)}, DSI0_VIDEO_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_VT_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_1)}, DSI0_VT_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_2)}, DSI0_VT_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_3)}, DSI0_VT_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_4)}, DSI0_VT_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_5)}, DSI0_VT_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_6)}, DSI0_VT_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_BROWSER_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_1)}, DSI0_BROWSER_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_2)}, DSI0_BROWSER_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_3)}, DSI0_BROWSER_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_4)}, DSI0_BROWSER_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_5)}, DSI0_BROWSER_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_6)}, DSI0_BROWSER_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc *mdnie_tune_value_dsi0[MAX_APP_MODE][MAX_MODE][MAX_OUTDOOR_MODE] = {
+		/*
+			DYNAMIC_MODE
+			STANDARD_MODE
+			NATURAL_MODE
+			MOVIE_MODE
+			AUTO_MODE
+		*/
+		// UI_APP
+		{
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+		},
+		// VIDEO_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// VIDEO_WARM_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// VIDEO_COLD_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// CAMERA_APP
+		{
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+		},
+		// NAVI_APP
+		{
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+		},
+		// GALLERY_APP
+		{
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+		},
+		// VT_APP
+		{
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+		},
+		// BROWSER_APP
+		{
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+		},
+		// eBOOK_APP
+		{
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+		},
+		// EMAIL_APP
+		{
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+		},
+};
+#endif /*_SAMSUNG_DSI_MDNIE_S6D7AA0X62_BV050HDM_*/
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h
new file mode 100755
index 00000000000..ac63aade215
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h
@@ -0,0 +1,2226 @@
+/*
+ * =================================================================
+ *
+ *
+ *	Description:  samsung display common file
+ *
+ *	Author: jb09.kim
+ *	Company:  Samsung Electronics
+ *
+ * ================================================================
+ */
+/*
+<one line to give the program's name and a brief idea of what it does.>
+Copyright (C) 2012, Samsung Electronics. All rights reserved.
+
+*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+*/
+
+
+#ifndef _SS_DSI_MDNIE_S6D7AA0X62_BV050HDM_
+#define _SS_DSI_MDNIE_S6D7AA0X62_BV050HDM_
+
+/* 2015.04.08 */
+
+#include "../ss_dsi_mdnie_lite_common.h"
+
+#define MDNIE_COLOR_BLINDE_CMD_OFFSET 1
+
+#define ADDRESS_SCR_WHITE_RED   0x7A
+#define ADDRESS_SCR_WHITE_GREEN 0x7C
+#define ADDRESS_SCR_WHITE_BLUE  0x7E
+
+#define MDNIE_STEP1_INDEX 1
+#define MDNIE_STEP2_INDEX 2
+
+static char level_1_key_on[] = {
+	0xF0,
+	0x5A, 0x5A
+};
+
+static char level_1_key_off[] = {
+	0xF0,
+	0xA5, 0xA5
+};
+
+static char DSI0_BYPASS_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_BYPASS_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_BYPASS_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_BYPASS_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_BYPASS_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_BYPASS_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x00, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_NEGATIVE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_NEGATIVE_MDNIE_2[] ={
+0xE9,
+0xff, //scr Cr Yb
+0x00, //scr Rr Bb
+0x00, //scr Cg Yg
+0xff, //scr Rg Bg
+0x00, //scr Cb Yr
+0xff, //scr Rb Br
+0x00, //scr Mr Mb
+0xff, //scr Gr Gb
+0xff, //scr Mg Mg
+0x00, //scr Gg Gg
+0x00, //scr Mb Mr
+0xff, //scr Gb Gr
+0x00, //scr Yr Cb
+0xff, //scr Br Rb
+0x00, //scr Yg Cg
+0xff, //scr Bg Rg
+0xff, //scr Yb Cr
+0x00, //scr Bb Rr
+0x00, //scr Wr Wb
+0xff, //scr Kr Kb
+0x00, //scr Wg Wg
+0xff, //scr Kg Kg
+0x00, //scr Wb Wr
+0xff, //scr Kb Kr
+};
+
+static char DSI0_NEGATIVE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_NEGATIVE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_NEGATIVE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_NEGATIVE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0, 
+0x05, //VSIZE
+0x00, 
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GRAYSCALE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GRAYSCALE_MDNIE_2[] ={
+0xE9,
+0xe2, //scr Cr Yb
+0x1d, //scr Rr Bb
+0xe2, //scr Cg Yg
+0x1d, //scr Rg Bg
+0xe2, //scr Cb Yr
+0x1d, //scr Rb Br
+0x69, //scr Mr Mb
+0x96, //scr Gr Gb
+0x69, //scr Mg Mg
+0x96, //scr Gg Gg
+0x69, //scr Mb Mr
+0x96, //scr Gb Gr
+0xb3, //scr Yr Cb
+0x4c, //scr Br Rb
+0xb3, //scr Yg Cg
+0x4c, //scr Bg Rg
+0xb3, //scr Yb Cr
+0x4c, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_GRAYSCALE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GRAYSCALE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GRAYSCALE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_GRAYSCALE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_2[] ={
+0xE9,
+0x1d, //scr Cr Yb
+0xe2, //scr Rr Bb
+0x1d, //scr Cg Yg
+0xe2, //scr Rg Bg
+0x1d, //scr Cb Yr
+0xe2, //scr Rb Br
+0x96, //scr Mr Mb
+0x69, //scr Gr Gb
+0x96, //scr Mg Mg
+0x69, //scr Gg Gg
+0x96, //scr Mb Mr
+0x69, //scr Gb Gr
+0x4c, //scr Yr Cb
+0xb3, //scr Br Rb
+0x4c, //scr Yg Cg
+0xb3, //scr Bg Rg
+0x4c, //scr Yb Cr
+0xb3, //scr Bb Rr
+0x00, //scr Wr Wb
+0xff, //scr Kr Kb
+0x00, //scr Wg Wg
+0xff, //scr Kg Kg
+0x00, //scr Wb Wr
+0xff, //scr Kb Kr
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_GRAYSCALE_NEGATIVE_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_5[] ={
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+static char DSI0_COLOR_ADJUSTMENT_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_UI_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_UI_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_UI_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_UI_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_UI_MDNIE_5[] ={
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+static char DSI0_UI_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_OUTDOOR_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_OUTDOOR_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_OUTDOOR_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x7b, //curve 1 a
+0x03, //curve 2 b
+0x48, //curve 2 a
+0x08, //curve 3 b
+0x32, //curve 3 a
+0x08, //curve 4 b
+0x32, //curve 4 a
+0x08, //curve 5 b
+0x32, //curve 5 a
+0x08, //curve 6 b
+0x32, //curve 6 a
+0x08, //curve 7 b
+0x32, //curve 7 a
+0x10, //curve 8 b
+0x28, //curve 8 a
+0x10, //curve 9 b
+0x28, //curve 9 a
+0x10, //curve10 b
+0x28, //curve10 a
+0x10, //curve11 b
+0x28, //curve11 a
+0x10, //curve12 b
+0x28, //curve12 a
+};
+static char DSI0_OUTDOOR_MDNIE_4[] ={
+0xEB,
+0x19, //curve13 b
+0x22, //curve13 a
+0x19, //curve14 b
+0x22, //curve14 a
+0x19, //curve15 b
+0x22, //curve15 a
+0x19, //curve16 b
+0x22, //curve16 a
+0x19, //curve17 b
+0x22, //curve17 a
+0x19, //curve18 b
+0x22, //curve18 a
+0x23, //curve19 b
+0x1e, //curve19 a
+0x2e, //curve20 b
+0x1b, //curve20 a
+0x33, //curve21 b
+0x1a, //curve21 a
+0x40, //curve22 b
+0x18, //curve22 a
+0x48, //curve23 b
+0x17, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_OUTDOOR_MDNIE_5[] ={
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+static char DSI0_OUTDOOR_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x03, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_VIDEO_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_VIDEO_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_VIDEO_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x1c, //curve 1 a
+0x00, //curve 2 b
+0x1c, //curve 2 a
+0x00, //curve 3 b
+0x1c, //curve 3 a
+0x00, //curve 4 b
+0x1c, //curve 4 a
+0x00, //curve 5 b
+0x1c, //curve 5 a
+0x00, //curve 6 b
+0x1c, //curve 6 a
+0x00, //curve 7 b
+0x1c, //curve 7 a
+0x00, //curve 8 b
+0x1c, //curve 8 a
+0x00, //curve 9 b
+0x1c, //curve 9 a
+0x00, //curve10 b
+0x1c, //curve10 a
+0x00, //curve11 b
+0x1c, //curve11 a
+0x00, //curve12 b
+0x1c, //curve12 a
+};
+
+static char DSI0_VIDEO_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x1c, //curve13 a
+0x0d, //curve14 b
+0xa4, //curve14 a
+0x0d, //curve15 b
+0xa4, //curve15 a
+0x0d, //curve16 b
+0xa4, //curve16 a
+0x0d, //curve17 b
+0xa4, //curve17 a
+0x0d, //curve18 b
+0xa4, //curve18 a
+0x0d, //curve19 b
+0xa4, //curve19 a
+0x0d, //curve20 b
+0xa4, //curve20 a
+0x0d, //curve21 b
+0xa4, //curve21 a
+0x25, //curve22 b
+0x1c, //curve22 a
+0x4a, //curve23 b
+0x17, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_VIDEO_MDNIE_5[] ={
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+
+static char DSI0_VIDEO_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x07, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_CAMERA_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_CAMERA_MDNIE_2[] ={
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_CAMERA_MDNIE_3[] ={
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_CAMERA_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_CAMERA_MDNIE_5[] ={
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+
+static char DSI0_CAMERA_MDNIE_6[] ={
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_GALLERY_MDNIE_1[] ={
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_GALLERY_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_GALLERY_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_GALLERY_MDNIE_4[] ={
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_GALLERY_MDNIE_5[] = {
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+
+static char DSI0_GALLERY_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_VT_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_VT_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_VT_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_VT_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_VT_MDNIE_5[] = {
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+
+static char DSI0_VT_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x03, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x06, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_BROWSER_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_BROWSER_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_BROWSER_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_BROWSER_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+
+static char DSI0_BROWSER_MDNIE_5[] = {
+0xEC,
+0x04, //cc b3 0.25
+0xe3,
+0x1f, //cc b2
+0x6a,
+0x1f, //cc b1
+0xb3,
+0x1f, //cc g3
+0xe3,
+0x04, //cc g2
+0x6a,
+0x1f, //cc g1
+0xb3,
+0x1f, //cc r3
+0xe3,
+0x1f, //cc r2
+0x6a,
+0x04, //cc r1
+0xb3,
+};
+static char DSI0_BROWSER_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x33, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x02, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_EBOOK_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+
+static char DSI0_EBOOK_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xd6, //scr Wr Wb
+0x00, //scr Kr Kb
+0xea, //scr Wg Wg
+0x00, //scr Kg Kg
+0xff, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+static char DSI0_EBOOK_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+
+static char DSI0_EBOOK_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+
+};
+static char DSI0_EBOOK_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+
+static char DSI0_EBOOK_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static char DSI0_EMAIL_MDNIE_1[] = {
+//start
+0xE8,
+0x00, //roi0 x start
+0x00,
+0x00, //roi0 x end
+0x00,
+0x00, //roi0 y start
+0x00,
+0x00, //roi0 y end
+0x00,
+0x00, //roi1 x strat
+0x00,
+0x00, //roi1 x end
+0x00,
+0x00, //roi1 y start
+0x00,
+0x00, //roi1 y end
+0x00,
+};
+static char DSI0_EMAIL_MDNIE_2[] = {
+0xE9,
+0x00, //scr Cr Yb
+0xff, //scr Rr Bb
+0xff, //scr Cg Yg
+0x00, //scr Rg Bg
+0xff, //scr Cb Yr
+0x00, //scr Rb Br
+0xff, //scr Mr Mb
+0x00, //scr Gr Gb
+0x00, //scr Mg Mg
+0xff, //scr Gg Gg
+0xff, //scr Mb Mr
+0x00, //scr Gb Gr
+0xff, //scr Yr Cb
+0x00, //scr Br Rb
+0xff, //scr Yg Cg
+0x00, //scr Bg Rg
+0x00, //scr Yb Cr
+0xff, //scr Bb Rr
+0xff, //scr Wr Wb
+0x00, //scr Kr Kb
+0xff, //scr Wg Wg
+0x00, //scr Kg Kg
+0xf7, //scr Wb Wr
+0x00, //scr Kb Kr
+};
+
+static char DSI0_EMAIL_MDNIE_3[] = {
+0xEA,
+0x00, //curve 1 b
+0x20, //curve 1 a
+0x00, //curve 2 b
+0x20, //curve 2 a
+0x00, //curve 3 b
+0x20, //curve 3 a
+0x00, //curve 4 b
+0x20, //curve 4 a
+0x00, //curve 5 b
+0x20, //curve 5 a
+0x00, //curve 6 b
+0x20, //curve 6 a
+0x00, //curve 7 b
+0x20, //curve 7 a
+0x00, //curve 8 b
+0x20, //curve 8 a
+0x00, //curve 9 b
+0x20, //curve 9 a
+0x00, //curve10 b
+0x20, //curve10 a
+0x00, //curve11 b
+0x20, //curve11 a
+0x00, //curve12 b
+0x20, //curve12 a
+};
+static char DSI0_EMAIL_MDNIE_4[] = {
+0xEB,
+0x00, //curve13 b
+0x20, //curve13 a
+0x00, //curve14 b
+0x20, //curve14 a
+0x00, //curve15 b
+0x20, //curve15 a
+0x00, //curve16 b
+0x20, //curve16 a
+0x00, //curve17 b
+0x20, //curve17 a
+0x00, //curve18 b
+0x20, //curve18 a
+0x00, //curve19 b
+0x20, //curve19 a
+0x00, //curve20 b
+0x20, //curve20 a
+0x00, //curve21 b
+0x20, //curve21 a
+0x00, //curve22 b
+0x20, //curve22 a
+0x00, //curve23 b
+0x20, //curve23 a
+0x00, //curve24 b
+0xFF, //curve24 a
+};
+static char DSI0_EMAIL_MDNIE_5[] = {
+0xEC,
+0x04, //cc r1
+0x00,
+0x00, //cc r2
+0x00,
+0x00, //cc r3
+0x00,
+0x00, //cc g1
+0x00,
+0x04, //cc g2
+0x00,
+0x00, //cc g3
+0x00,
+0x00, //cc b1
+0x00,
+0x00, //cc b2
+0x00,
+0x04, //cc b3
+0x00,
+};
+static char DSI0_EMAIL_MDNIE_6[] = {
+0xE7,
+0x08, //roi_ctrl rgb_if_type mdnie_en mask 00 00 0 000
+0x30, //scr_roi 1 scr algo_roi 1 algo 00 1 0 00 1 0
+0x02, //HSIZE
+0xD0,
+0x05, //VSIZE
+0x00,
+0x00, //sharpen cc gamma 00 0 0
+//end
+};
+
+static struct dsi_cmd_desc DSI0_BYPASS_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_1)}, DSI0_BYPASS_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_2)}, DSI0_BYPASS_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_3)}, DSI0_BYPASS_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_4)}, DSI0_BYPASS_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_5)}, DSI0_BYPASS_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BYPASS_MDNIE_6)}, DSI0_BYPASS_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_CAMERA_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_1)}, DSI0_CAMERA_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_2)}, DSI0_CAMERA_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_3)}, DSI0_CAMERA_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_4)}, DSI0_CAMERA_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_5)}, DSI0_CAMERA_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_CAMERA_MDNIE_6)}, DSI0_CAMERA_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_COLOR_ADJUSTMENT_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_1)}, DSI0_COLOR_ADJUSTMENT_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_2)}, DSI0_COLOR_ADJUSTMENT_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_3)}, DSI0_COLOR_ADJUSTMENT_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_4)}, DSI0_COLOR_ADJUSTMENT_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_5)}, DSI0_COLOR_ADJUSTMENT_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_COLOR_ADJUSTMENT_MDNIE_6)}, DSI0_COLOR_ADJUSTMENT_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_EBOOK_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_1)}, DSI0_EBOOK_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_2)}, DSI0_EBOOK_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_3)}, DSI0_EBOOK_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_4)}, DSI0_EBOOK_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_5)}, DSI0_EBOOK_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EBOOK_MDNIE_6)}, DSI0_EBOOK_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_EMAIL_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_1)}, DSI0_EMAIL_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_2)}, DSI0_EMAIL_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_3)}, DSI0_EMAIL_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_4)}, DSI0_EMAIL_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_5)}, DSI0_EMAIL_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_EMAIL_MDNIE_6)}, DSI0_EMAIL_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+
+static struct dsi_cmd_desc DSI0_GALLERY_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_1)}, DSI0_GALLERY_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_2)}, DSI0_GALLERY_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_3)}, DSI0_GALLERY_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_4)}, DSI0_GALLERY_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_5)}, DSI0_GALLERY_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GALLERY_MDNIE_6)}, DSI0_GALLERY_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_NEGATIVE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_1)}, DSI0_NEGATIVE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_2)}, DSI0_NEGATIVE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_3)}, DSI0_NEGATIVE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_4)}, DSI0_NEGATIVE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_5)}, DSI0_NEGATIVE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_NEGATIVE_MDNIE_6)}, DSI0_NEGATIVE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_GRAYSCALE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_1)}, DSI0_GRAYSCALE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_2)}, DSI0_GRAYSCALE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_3)}, DSI0_GRAYSCALE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_4)}, DSI0_GRAYSCALE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_5)}, DSI0_GRAYSCALE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_MDNIE_6)}, DSI0_GRAYSCALE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_GRAYSCALE_NEGATIVE_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_1)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_2)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_3)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_4)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_5)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_GRAYSCALE_NEGATIVE_MDNIE_6)}, DSI0_GRAYSCALE_NEGATIVE_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_OUTDOOR_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_1)}, DSI0_OUTDOOR_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_2)}, DSI0_OUTDOOR_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_3)}, DSI0_OUTDOOR_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_4)}, DSI0_OUTDOOR_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_5)}, DSI0_OUTDOOR_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_OUTDOOR_MDNIE_6)}, DSI0_OUTDOOR_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_UI_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_1)}, DSI0_UI_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_2)}, DSI0_UI_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_3)}, DSI0_UI_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_4)}, DSI0_UI_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_5)}, DSI0_UI_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_UI_MDNIE_6)}, DSI0_UI_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_VIDEO_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_1)}, DSI0_VIDEO_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_2)}, DSI0_VIDEO_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_3)}, DSI0_VIDEO_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_4)}, DSI0_VIDEO_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_5)}, DSI0_VIDEO_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VIDEO_MDNIE_6)}, DSI0_VIDEO_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_VT_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_1)}, DSI0_VT_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_2)}, DSI0_VT_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_3)}, DSI0_VT_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_4)}, DSI0_VT_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_5)}, DSI0_VT_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_VT_MDNIE_6)}, DSI0_VT_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc DSI0_BROWSER_MDNIE[] = {
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(level_1_key_on)}, level_1_key_on},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_1)}, DSI0_BROWSER_MDNIE_1},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_2)}, DSI0_BROWSER_MDNIE_2},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_3)}, DSI0_BROWSER_MDNIE_3},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_4)}, DSI0_BROWSER_MDNIE_4},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_5)}, DSI0_BROWSER_MDNIE_5},
+	{{DTYPE_DCS_LWRITE, 0, 0, 0, 0, sizeof(DSI0_BROWSER_MDNIE_6)}, DSI0_BROWSER_MDNIE_6},
+	{{DTYPE_DCS_LWRITE, 1, 0, 0, 0, sizeof(level_1_key_off)}, level_1_key_off},
+};
+static struct dsi_cmd_desc *mdnie_tune_value_dsi0[MAX_APP_MODE][MAX_MODE][MAX_OUTDOOR_MODE] = {
+		/*
+			DYNAMIC_MODE
+			STANDARD_MODE
+			NATURAL_MODE
+			MOVIE_MODE
+			AUTO_MODE
+		*/
+		// UI_APP
+		{
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+			{DSI0_UI_MDNIE,	NULL},
+		},
+		// VIDEO_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// VIDEO_WARM_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// VIDEO_COLD_APP
+		{
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+			{DSI0_VIDEO_MDNIE,	NULL},
+		},
+		// CAMERA_APP
+		{
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+			{DSI0_CAMERA_MDNIE,	NULL},
+		},
+		// NAVI_APP
+		{
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+			{NULL,	NULL},
+		},
+		// GALLERY_APP
+		{
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+			{DSI0_GALLERY_MDNIE,	NULL},
+		},
+		// VT_APP
+		{
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+			{DSI0_VT_MDNIE,	NULL},
+		},
+		// BROWSER_APP
+		{
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+			{DSI0_BROWSER_MDNIE,	NULL},
+		},
+		// eBOOK_APP
+		{
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+			{DSI0_EBOOK_MDNIE,	NULL},
+		},
+		// EMAIL_APP
+		{
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+			{DSI0_EMAIL_MDNIE,	NULL},
+		},
+};
+#endif /*_SAMSUNG_DSI_MDNIE_S6D7AA0X62_BV050HDM_*/
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.c b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.c
new file mode 100755
index 00000000000..7feb62c13fa
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.c
@@ -0,0 +1,319 @@
+/*
+ * =================================================================
+ *
+ *
+ *	Description:  samsung display panel file
+ *
+ *	Author: jb09.kim
+ *	Company:  Samsung Electronics
+ *
+ * ================================================================
+ */
+/*
+<one line to give the program's name and a brief idea of what it does.>
+Copyright (C) 2012, Samsung Electronics. All rights reserved.
+
+*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+*/
+#include "ss_dsi_panel_S6D7AA0X62_BV050HDM.h"
+#if defined (CONFIG_PANEL_S6D7AA0X62_BV050HDM_HD_5_0)
+#include "ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_0.h"
+#elif defined (CONFIG_PANEL_S6D7AA0X62_BV050HDM_HD_5_5_J7LTECHN)
+#include "ss_dsi_mdnie_S6D7AA0X62_BV050HDM_5_5.h"
+#else
+#error select proper panel size
+#endif
+
+static int is_first_boot = 1;
+
+static int mdss_panel_on_pre(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return false;
+	}
+
+	pr_info("%s %d\n", __func__, ctrl->ndx);
+
+	mdss_panel_attach_set(ctrl, true);
+
+	return true;
+}
+static void update_mdnie_tft_cmds(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return;
+	}
+
+	if (!mdss_panel_attach_get(ctrl)) {
+		pr_err("%s: mdss_panel_attach_get(%d) : %d\n",__func__, ctrl->ndx, mdss_panel_attach_get(ctrl));
+		return;
+	}
+
+	if (vdd->support_mdnie_lite)
+		update_dsi_tcon_mdnie_register(vdd);
+
+}
+static int mdss_panel_on_post(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return false;
+	}
+
+	pr_info("%s %d\n", __func__, ctrl->ndx);
+
+	if(vdd->support_cabc)
+		mdss_samsung_cabc_update();
+
+	if(is_first_boot){
+		if (ctrl->panel_data.set_backlight)
+			ctrl->panel_data.set_backlight(&ctrl->panel_data, LCD_DEFAUL_BL_LEVEL);
+		is_first_boot = 0;
+	}
+
+	return true;
+}
+
+static int mdss_panel_revision(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return false;
+	}
+
+	vdd->panel_revision = 0;
+
+	return true;
+}
+
+static struct dsi_panel_cmds * mdss_brightness_tft_pwm(struct mdss_dsi_ctrl_pdata *ctrl, int *level_key)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return NULL;
+	}
+	set_auto_brightness_value(vdd, ctrl->ndx);
+
+	if (vdd->bl_level > 255)
+		vdd->bl_level = 255;
+
+	vdd->scaled_level = get_scaled_level(vdd, ctrl->ndx);
+
+	pr_info("%s bl_level : %d scaled_level : %d\n", __func__, vdd->bl_level, vdd->scaled_level);
+
+	vdd->dtsi_data[ctrl->ndx].tft_pwm_tx_cmds->cmds->payload[1] = vdd->scaled_level ;
+
+	if(vdd->mdss_panel_tft_outdoormode_update)
+		vdd->mdss_panel_tft_outdoormode_update(ctrl);
+
+	if (vdd->support_mdnie_lite)
+		update_dsi_tcon_mdnie_register(vdd);
+
+	*level_key = 0;
+
+	return &vdd->dtsi_data[ctrl->ndx].tft_pwm_tx_cmds[vdd->panel_revision];
+}
+
+static void mdss_panel_tft_outdoormode_update(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct samsung_display_driver_data *vdd = check_valid_ctrl(ctrl);
+	if (IS_ERR_OR_NULL(vdd)) {
+		pr_err("%s: Invalid data ctrl : 0x%zx vdd : 0x%zx", __func__, (size_t)ctrl, (size_t)vdd);
+		return;
+	}
+	pr_info("%s: tft panel autobrightness update\n", __func__);
+
+	switch(vdd->auto_brightness)
+	{
+	case 0:
+	case 1:
+	case 2:
+	case 3:
+	case 4:
+	case 5:	if(vdd->prev_auto_brightness == 6)
+				vdd->panel_func.samsung_bl_ic_outdoor(0);
+			break;
+	case 6:	vdd->panel_func.samsung_bl_ic_outdoor(1);
+			break;
+	}
+	vdd->prev_auto_brightness =	vdd->auto_brightness;
+}
+
+static void dsi_update_mdnie_data(void)
+{
+	/* Update mdnie command */
+	mdnie_data.DSI0_COLOR_BLIND_MDNIE_2 = DSI0_COLOR_ADJUSTMENT_MDNIE_2;
+	mdnie_data.DSI0_RGB_SENSOR_MDNIE_1 = NULL;
+	mdnie_data.DSI0_RGB_SENSOR_MDNIE_2 = NULL;
+	mdnie_data.DSI0_UI_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_UI_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_UI_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VIDEO_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VIDEO_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VIDEO_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_CAMERA_MDNIE_2 = NULL;
+	mdnie_data.DSI0_CAMERA_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_GALLERY_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_GALLERY_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_GALLERY_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VT_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VT_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_VT_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_BROWSER_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_BROWSER_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_BROWSER_AUTO_MDNIE_2 = NULL;
+	mdnie_data.DSI0_EBOOK_DYNAMIC_MDNIE_2 = NULL;
+	mdnie_data.DSI0_EBOOK_STANDARD_MDNIE_2 = NULL;
+	mdnie_data.DSI0_EBOOK_AUTO_MDNIE_2 = NULL;
+
+	mdnie_data.DSI0_BYPASS_MDNIE = DSI0_BYPASS_MDNIE;
+	mdnie_data.DSI0_NEGATIVE_MDNIE = DSI0_NEGATIVE_MDNIE;
+	mdnie_data.DSI0_GRAYSCALE_MDNIE = DSI0_GRAYSCALE_MDNIE;
+	mdnie_data.DSI0_GRAYSCALE_NEGATIVE_MDNIE = DSI0_GRAYSCALE_NEGATIVE_MDNIE;
+	mdnie_data.DSI0_COLOR_BLIND_MDNIE = DSI0_COLOR_ADJUSTMENT_MDNIE;
+	mdnie_data.DSI0_HBM_CE_MDNIE = DSI0_OUTDOOR_MDNIE;
+	mdnie_data.DSI0_RGB_SENSOR_MDNIE = NULL;
+	mdnie_data.DSI0_CURTAIN = NULL;
+	mdnie_data.DSI0_UI_DYNAMIC_MDNIE = DSI0_UI_MDNIE;
+	mdnie_data.DSI0_UI_STANDARD_MDNIE = DSI0_UI_MDNIE;
+	mdnie_data.DSI0_UI_NATURAL_MDNIE = DSI0_UI_MDNIE;
+	mdnie_data.DSI0_UI_MOVIE_MDNIE = DSI0_UI_MDNIE;
+	mdnie_data.DSI0_UI_AUTO_MDNIE = DSI0_UI_MDNIE;
+	mdnie_data.DSI0_VIDEO_OUTDOOR_MDNIE = NULL;
+	mdnie_data.DSI0_VIDEO_DYNAMIC_MDNIE = DSI0_VIDEO_MDNIE;
+	mdnie_data.DSI0_VIDEO_STANDARD_MDNIE = DSI0_VIDEO_MDNIE;
+	mdnie_data.DSI0_VIDEO_NATURAL_MDNIE = DSI0_VIDEO_MDNIE;
+	mdnie_data.DSI0_VIDEO_MOVIE_MDNIE = DSI0_VIDEO_MDNIE;
+	mdnie_data.DSI0_VIDEO_AUTO_MDNIE = DSI0_VIDEO_MDNIE;
+	mdnie_data.DSI0_VIDEO_WARM_OUTDOOR_MDNIE = NULL;
+	mdnie_data.DSI0_VIDEO_WARM_MDNIE = NULL;
+	mdnie_data.DSI0_VIDEO_COLD_OUTDOOR_MDNIE = NULL;
+	mdnie_data.DSI0_VIDEO_COLD_MDNIE = NULL;
+	mdnie_data.DSI0_CAMERA_OUTDOOR_MDNIE = NULL;
+	mdnie_data.DSI0_CAMERA_MDNIE = DSI0_CAMERA_MDNIE;
+	mdnie_data.DSI0_CAMERA_AUTO_MDNIE = DSI0_CAMERA_MDNIE;
+	mdnie_data.DSI0_GALLERY_DYNAMIC_MDNIE = DSI0_GALLERY_MDNIE;
+	mdnie_data.DSI0_GALLERY_STANDARD_MDNIE = DSI0_GALLERY_MDNIE;
+	mdnie_data.DSI0_GALLERY_NATURAL_MDNIE = DSI0_GALLERY_MDNIE;
+	mdnie_data.DSI0_GALLERY_MOVIE_MDNIE = DSI0_GALLERY_MDNIE;
+	mdnie_data.DSI0_GALLERY_AUTO_MDNIE = DSI0_GALLERY_MDNIE;
+	mdnie_data.DSI0_VT_DYNAMIC_MDNIE = DSI0_VT_MDNIE;
+	mdnie_data.DSI0_VT_STANDARD_MDNIE = DSI0_VT_MDNIE;
+	mdnie_data.DSI0_VT_NATURAL_MDNIE = DSI0_VT_MDNIE;
+	mdnie_data.DSI0_VT_MOVIE_MDNIE = DSI0_VT_MDNIE;
+	mdnie_data.DSI0_VT_AUTO_MDNIE = DSI0_VT_MDNIE;
+	mdnie_data.DSI0_BROWSER_DYNAMIC_MDNIE = DSI0_BROWSER_MDNIE;
+	mdnie_data.DSI0_BROWSER_STANDARD_MDNIE = DSI0_BROWSER_MDNIE;
+	mdnie_data.DSI0_BROWSER_NATURAL_MDNIE = DSI0_BROWSER_MDNIE;
+	mdnie_data.DSI0_BROWSER_MOVIE_MDNIE = DSI0_BROWSER_MDNIE;
+	mdnie_data.DSI0_BROWSER_AUTO_MDNIE = DSI0_BROWSER_MDNIE;
+	mdnie_data.DSI0_EBOOK_DYNAMIC_MDNIE = DSI0_EBOOK_MDNIE;
+	mdnie_data.DSI0_EBOOK_STANDARD_MDNIE = DSI0_EBOOK_MDNIE;
+	mdnie_data.DSI0_EBOOK_NATURAL_MDNIE = DSI0_EBOOK_MDNIE;
+	mdnie_data.DSI0_EBOOK_MOVIE_MDNIE = DSI0_EBOOK_MDNIE;
+	mdnie_data.DSI0_EBOOK_AUTO_MDNIE = DSI0_EBOOK_MDNIE;
+	mdnie_data.DSI0_EMAIL_AUTO_MDNIE = DSI0_EMAIL_MDNIE;
+	mdnie_data.mdnie_tune_value_dsi0 = mdnie_tune_value_dsi0;
+
+	/* Update MDNIE data related with size, offset or index */
+	mdnie_data.dsi0_bypass_mdnie_size = ARRAY_SIZE(DSI0_UI_MDNIE);
+	mdnie_data.mdnie_color_blinde_cmd_offset = MDNIE_COLOR_BLINDE_CMD_OFFSET;
+	mdnie_data.mdnie_step_index[MDNIE_STEP1] = MDNIE_STEP1_INDEX;
+	mdnie_data.mdnie_step_index[MDNIE_STEP2] = MDNIE_STEP2_INDEX;
+	mdnie_data.address_scr_white[ADDRESS_SCR_WHITE_RED_OFFSET] = 0;
+	mdnie_data.address_scr_white[ADDRESS_SCR_WHITE_GREEN_OFFSET] = 0;
+	mdnie_data.address_scr_white[ADDRESS_SCR_WHITE_BLUE_OFFSET] = 0;
+	mdnie_data.dsi0_rgb_sensor_mdnie_1_size = 0;
+	mdnie_data.dsi0_rgb_sensor_mdnie_2_size = 0;
+}
+
+static void mdss_panel_init(struct samsung_display_driver_data *vdd)
+{
+	pr_info("%s : %s", __func__, vdd->panel_name);
+
+	vdd->support_panel_max = S6D7AA0X62_BV050HDM_SUPPORT_PANEL_COUNT;
+	vdd->support_cabc = false;
+	vdd->manufacture_id_dsi[vdd->support_panel_max - 1] = get_lcd_attached("GET");
+
+	vdd->support_mdnie_lite = true;
+	vdd->mdnie_tune_size1 = 17;
+	vdd->mdnie_tune_size2 = 25;
+	vdd->mdnie_tune_size3 = 25;
+	vdd->mdnie_tune_size4 = 25;
+	vdd->mdnie_tune_size5 = 19;
+	vdd->mdnie_tune_size6 = 8;
+
+	/* ON/OFF */
+	vdd->panel_func.samsung_panel_on_pre = mdss_panel_on_pre;
+	vdd->panel_func.samsung_panel_on_post = mdss_panel_on_post;
+	vdd->panel_func.samsung_panel_off_pre = NULL;
+	vdd->panel_func.samsung_panel_off_post = NULL;
+
+	/* DDI RX */
+	vdd->panel_func.samsung_panel_revision = mdss_panel_revision;
+	vdd->panel_func.samsung_manufacture_date_read = NULL;
+	vdd->panel_func.samsung_ddi_id_read = NULL;
+	vdd->panel_func.samsung_hbm_read = NULL;
+	vdd->panel_func.samsung_mdnie_read = NULL;
+	vdd->panel_func.samsung_smart_dimming_init = NULL;
+
+	/* Brightness */
+	vdd->panel_func.samsung_brightness_tft_pwm_ldi = mdss_brightness_tft_pwm;
+	vdd->panel_func.samsung_brightness_hbm_off = NULL;
+	vdd->panel_func.samsung_brightness_aid = NULL;
+	vdd->panel_func.samsung_brightness_acl_on = NULL;
+	vdd->panel_func.samsung_brightness_acl_percent = NULL;
+	vdd->panel_func.samsung_brightness_acl_off = NULL;
+	vdd->panel_func.samsung_brightness_elvss = NULL;
+	vdd->panel_func.samsung_brightness_elvss_temperature1 = NULL;
+	vdd->panel_func.samsung_brightness_elvss_temperature2 = NULL;
+	vdd->panel_func.samsung_brightness_vint = NULL;
+	vdd->panel_func.samsung_brightness_gamma = NULL;
+	vdd->brightness[0].brightness_packet_tx_cmds_dsi.link_state = DSI_HS_MODE;
+	vdd->panel_func.samsung_backlight_late_on = update_mdnie_tft_cmds;
+	vdd->mdss_panel_tft_outdoormode_update=mdss_panel_tft_outdoormode_update;
+
+	dsi_update_mdnie_data();
+	mdss_panel_attach_set(vdd->ctrl_dsi[DISPLAY_1], true);
+}
+
+static int __init samsung_panel_init(void)
+{
+	struct samsung_display_driver_data *vdd = samsung_get_vdd();
+	char panel_string[] = "ss_dsi_panel_S6D7AA0X62_BV050HDM_HD";
+
+	vdd->panel_name = mdss_mdp_panel + 8;
+	pr_info("%s : %s\n", __func__, vdd->panel_name);
+
+	if (!strncmp(vdd->panel_name, panel_string, strlen(panel_string)))
+		vdd->panel_func.samsung_panel_init = mdss_panel_init;
+
+	return 0;
+}
+early_initcall(samsung_panel_init);
diff --git a/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.h b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.h
new file mode 100755
index 00000000000..fc990b1cef4
--- /dev/null
+++ b/drivers/video/msm/mdss/samsung/S6D7AA0X62_BV050HDM_J7LTECHN/ss_dsi_panel_S6D7AA0X62_BV050HDM.h
@@ -0,0 +1,41 @@
+/*
+ * =================================================================
+ *
+ *
+ *	Description:  samsung display panel file
+ *
+ *	Author: jb09.kim
+ *	Company:  Samsung Electronics
+ *
+ * ================================================================
+ */
+/*
+<one line to give the program's name and a brief idea of what it does.>
+Copyright (C) 2012, Samsung Electronics. All rights reserved.
+
+*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+*/
+#ifndef SS_DSI_PANEL_S6D7AA0X62_LTL101AT01_H
+#define SS_DSI_PANEL_S6D7AA0X62_LTL101AT01_H
+
+#include "../ss_dsi_panel_common.h"
+
+#define S6D7AA0X62_BV050HDM_SUPPORT_PANEL_COUNT 1
+#define LCD_DEFAUL_BL_LEVEL 125
+
+extern void pwm_backlight_control(int enable);
+#endif
-- 
2.20.1

